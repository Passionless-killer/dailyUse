1.delete 可以删除数组的单元，但是数组长度不会改变

2.数组缺少的地方会为undefined。
    例如：a=[]; 
          a[3]=1 ;
          a   //  [undefined,undefined,undefined,1]

3.数组也是对象，所以也包含字符串键值和属性。
    例如：a=[]
          a[0]=1
          a['name']=lily
          a  //[undefined,1]
          a.name // 'lily'
  如果 字符串键值能转化成数字，就会当初数字索引处理
    例如：a=[]
          a['1']=1
          a  //[undefined,1]

4.slice(),Array.form()都是返回一个数组复本、

5. 点（.)运算符会被优先识别为数字的一部分 
  例如：42.toFixed(2)  //报错
        42..toFixed(2) // 42.00
        42 .toFixed(2) // 42.00

6. 0.1+0.2不等于0.3 。计算时可以引入机器精度（Number.EPSILON）。
    例如：function equal(x,y){return Math.abs(x-y)<Number.EPSILON}
    var a=0.1+0.3
    var b=0..
    equal(a,b) //ture

7.Number.isInteger();检验是否为整数

8.null,undefined 不是值的值

9.void XXX 没有返回值，所以为undefined。

10.nan无效数值。nan!=nan。isNaN（）：检查参数是否不是NaN,也不是数字
   例如：isNaN(NaN)  //ture
         isNaN('name')  //ture

11.Number.isNaN():检查是不是NaN

23.-0转化为字符串会变成 0 ，但是'-0'转化为数字就能时-0 
   例如：String(-0)  //0
   JSON.stringofy(-0)  //0
   JSON.parse('-0')  //-0
   -0==0 //ture

24.Object.is();可以以来处理NaN不等于他自身，以及-0 = 0的问题。考虑到全能问题，能用==，===的情况下不要用object.is()
    例如：Object.is(-0，0)  //false
            Object.is(NaN,NaN )  //ture